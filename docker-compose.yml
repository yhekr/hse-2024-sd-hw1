version: '3.9'

services:
  redis_cache:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

#  zookeeper:
#    image: wurstmeister/zookeeper:3.4.6
#    container_name: zookeeper
#    ports:
#      - "2181:2181"

#  kafka:
#    image: wurstmeister/kafka:latest
#    container_name: kafka_broker
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    depends_on:
#      - zookeeper

  source-service:
    build: ./source-service
    container_name: source_service
    ports:
      - "50051:50051"
    environment:
      - GRPC_PORT=50051
      - KAFKA_BROKER=kafka:9092
      - MOCK_SERVER_HOST=mock-sources-server
      - MOCK_SERVER_PORT=3629
      - REDIS_HOST=redis_cache
    depends_on:
      - mock-sources-server
      - redis_cache

  # Order Service
  order-service:
    build: ./order-service
    container_name: order_service
    depends_on:
      - db
      - source-service
#      - kafka
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/orderdb
      - GRPC_HOST=source_service
      - GRPC_PORT=50051
      - KAFKA_BROKER=kafka:9092
    ports:
      - "8000:8000"

  mock-sources-server:
    build: ./mock-sources-server
    container_name: mock-sources-server
    ports:
      - "3629:3629"

  outbox-processor:
    build: ./outbox-processor
    container_name: outbox_processor
    environment:
      - MOCK_SERVER_HOST=mock-sources-server
      - MOCK_SERVER_PORT=3629
    depends_on:
      - db
      - mock-sources-server
      - order-service
    restart: on-failure:10

volumes:
  db_data:
